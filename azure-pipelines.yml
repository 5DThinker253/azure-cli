resources:
- repo: self

trigger:
  batch: true
  branches:
    include:
    - '*'

pr:
  branches:
    include:
      - '*'

jobs:
- job: CheckPullRequest
  displayName: "Check the Format of Pull Request Title and Content"
  condition: and(succeeded(), in(variables['System.PullRequest.TargetBranch'], 'dev', 'release'))

  pool:
    vmImage: 'ubuntu-20.04'
  steps:
    - bash: |
        echo "Check Title of Pull Request: #$(System.PullRequest.PullRequestNumber)"
        title=$(curl https://api.github.com/repos/$(Build.Repository.Name)/pulls/$(System.PullRequest.PullRequestNumber) | jq -r '.title')
        echo $title
        body=$(curl https://api.github.com/repos/$(Build.Repository.Name)/pulls/$(System.PullRequest.PullRequestNumber) | jq -r '.body')
        echo $body
        if [ "$(System.PullRequest.TargetBranch)" != "release" ] && echo $title | grep -iqF hotfix:; then
          echo "Hotfix PR should target release branch."
          exit 1
        fi
        python scripts/ci/check_pull_request.py "$title" "$body"

- job: RejectPullRequestToMasterBranch
  displayName: "Reject Pull Request To Master Branch"
  condition: and(succeeded(), eq(variables['System.PullRequest.TargetBranch'], 'master'))

  pool:
    vmImage: 'ubuntu-20.04'
  steps:
    - bash: |
        echo "Reject pull request directly to master branch"
        exit 1

- job: ExtractMetadata
  displayName: Extract Metadata

  condition: succeeded()
  pool:
    vmImage: 'ubuntu-20.04'
  steps:
  - task: Bash@3
    displayName: 'Extract Version'
    inputs:
      targetType: 'filePath'
      filePath: scripts/release/get_version.sh


  - task: PublishPipelineArtifact@0
    displayName: 'Publish Artifact: metadata'
    inputs:
      TargetPath: $(Build.ArtifactStagingDirectory)
      ArtifactName: metadata

- job: VerifyVersions
  displayName: Verify Command Module Versions
  condition: and(succeeded(), or(eq(variables['Build.SourceBranch'], 'refs/heads/release'), eq(variables['System.PullRequest.TargetBranch'], 'release')))

  pool:
    vmImage: 'ubuntu-20.04'
  steps:
  - task: UsePythonVersion@0
    displayName: 'Use Python 3.10'
    inputs:
      versionSpec: 3.10
  - template: .azure-pipelines/templates/azdev_setup.yml
  - bash: |
      set -ev
      . env/bin/activate
      azdev verify history

    displayName: 'Verify History'

- job: TestCore
  displayName: Unit Test for Core
  timeoutInMinutes: 10
  pool:
    vmImage: 'ubuntu-20.04'
  strategy:
    matrix:
      Python36:
        python.version: '3.6'
      Python39:
        python.version: '3.9'
      Python310:
        python.version: '3.10'
  steps:
    - template: .azure-pipelines/templates/automation_test.yml
      parameters:
        pythonVersion: '$(python.version)'
        module: 'azure-cli-core'

- job: TestTelemetry
  displayName: Unit Test for Telemetry
  timeoutInMinutes: 10
  pool:
    vmImage: 'ubuntu-20.04'
  strategy:
    matrix:
      Python36:
        python.version: '3.6'
      Python39:
        python.version: '3.9'
      Python310:
        python.version: '3.10'
  steps:
    - template: .azure-pipelines/templates/automation_test.yml
      parameters:
        pythonVersion: '$(python.version)'
        module: 'azure-cli-telemetry'

- job: BuildRpmPackageCentOS7
  displayName: Build Rpm Package CentOS 7
  # Uncomment this line to disable this job on Pull Requests
  # condition: and(succeeded(), in(variables['Build.Reason'], 'IndividualCI', 'BatchedCI', 'Manual', 'Schedule'))
  pool:
    vmImage: 'ubuntu-20.04'
  steps:
  - task: Bash@3
    displayName: 'Build Rpm Package'
    inputs:
      targetType: 'filePath'
      filePath: scripts/release/rpm/pipeline.sh
    env:
      IMAGE: centos7
  - task: AzureArtifacts.manifest-generator-task.manifest-generator-task.ManifestGeneratorTask@0
    displayName: 'SBOM'
    inputs:
      BuildDropPath: $(Build.ArtifactStagingDirectory)
  - task: PublishPipelineArtifact@0
    displayName: 'Publish Artifact: rpm'
    inputs:
      TargetPath: $(Build.ArtifactStagingDirectory)
      # Should be 'rpm-centos7', but we keep 'yum' for backward compatibility
      ArtifactName: yum
